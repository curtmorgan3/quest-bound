services:
  client:
    build:
      context: ./client
    container_name: quest-bound-client
    depends_on:
      server:
        condition: service_completed_successfully
    networks:
      - quest-bound
    ports:
      - 5173:5173

  server:
    build:
      context: ./server
    container_name: quest-bound-server
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_completed_successfully
    networks:
      - quest-bound
    ports:
      - 8000:8000

  redis:
    image: redis/redis-stack-server:latest
    container_name: quest-bound-redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - quest-bound

  postgres:
    image: postgres:latest
    restart: always
    container_name: quest-bound-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - quest-bound

volumes:
  pg-data:

networks:
  quest-bound:
